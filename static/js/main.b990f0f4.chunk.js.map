{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstDigit","setFirstDigit","secondDigit","setSecondDigit","step","setStep","operation","setOperation","Digits","props","className","onClick","int","digit","Operators","sign","parseFloat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyGeA,EAtGH,WACV,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAmDMC,EAAS,SAACC,GACd,OACE,wBAAQC,UAAU,SAASC,QAAS,WArBpB,IAACC,IAqBoCH,EAAMI,MApBlD,IAART,GACDH,EAAc,GAAD,OAAIW,IACjBP,EAAQ,IAEO,IAATD,EACNH,EAAc,UAAGD,GAAH,UAAqBY,KAGnCT,EAAe,UAAGD,GAAH,UAAsBU,IACrCP,EAAQ,KAWR,SAAqEI,EAAMI,SAIzEC,EAAY,SAACL,GACjB,OACE,wBAAQC,UAAU,iBAAiBC,QAAS,WAdzB,IAACI,IAc4CN,EAAMM,KAbxER,EAAaQ,GACbV,EAAQ,IAYN,SAA+EI,EAAMM,QAIzF,OACE,sBAAKL,UAAU,MAAf,UACE,oDACCN,GAAQ,EAAK,6BAAKF,IAClB,6BAAKF,IACN,qBAAKU,UAAU,QAAf,SAAuB,wBAAQA,UAAU,cAAcC,QAAS,kBA1ClEV,EAAc,IACdE,EAAe,IACfE,EAAQ,QACRE,EAAa,KAuCY,qBACvB,sBAAKG,UAAU,gBAAf,UACE,cAACF,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAO,IACf,cAACL,EAAD,CAAQK,MAAK,SAGf,sBAAKH,UAAU,uBAAf,UACE,cAACI,EAAD,CAAWC,KAAK,MAChB,cAACD,EAAD,CAAWC,KAAK,MAChB,cAACD,EAAD,CAAWC,KAAK,MAChB,cAACD,EAAD,CAAWC,KAAK,MAChB,wBAAQL,UAAU,iBAAiBC,QAAS,WArFpC,MAATL,GACDL,EAAee,WAAWhB,GAAYgB,WAAWd,IACjDC,EAAe,IACfE,EAAQ,IACQ,MAATC,GACPL,EAAee,WAAWhB,GAAYgB,WAAWd,IACjDC,EAAe,IACfE,EAAQ,IACQ,MAATC,GACPL,EAAee,WAAWhB,GAAYgB,WAAWd,IACjDC,EAAe,IACfE,EAAQ,IACQ,MAATC,GACPL,EAAee,WAAWhB,GAAYgB,WAAWd,IACjDC,EAAe,IACfE,EAAQ,KAERJ,EAAc,oCACdI,EAAQ,KAmEN,sBCnFOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b990f0f4.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nconst App = () => {\n  const [firstDigit, setFirstDigit] = useState(``);\n  const [secondDigit, setSecondDigit] = useState(``);\n  const [step, setStep] = useState(1);\n  const [operation, setOperation] = useState(``);\n\n  const calculate = () =>{\n    if(operation === `+`) {\n      setFirstDigit((parseFloat(firstDigit)+parseFloat(secondDigit)))\n      setSecondDigit(``)\n      setStep(0)}\n    else if (operation === `-`) {\n      setFirstDigit((parseFloat(firstDigit)-parseFloat(secondDigit)))\n      setSecondDigit(``)\n      setStep(0)}\n    else if (operation === `*`) {\n      setFirstDigit((parseFloat(firstDigit)*parseFloat(secondDigit)))\n      setSecondDigit(``)\n      setStep(0)}\n    else if (operation === `/`) {\n      setFirstDigit((parseFloat(firstDigit)/parseFloat(secondDigit)))\n      setSecondDigit(``)\n      setStep(0)}\n    else {\n      setFirstDigit(`Something went wrong, try again.`)\n      setStep(0)}\n  }\n\n\n  const reset = () =>{\n    setFirstDigit(``);\n    setSecondDigit(``);\n    setStep(0)\n    setOperation(``)\n  }\n\n  const selectDigit = (int) =>{\n    if(step ===0){\n      setFirstDigit(`${int}`)\n      setStep(1)\n    } \n    else if(step === 1){\n      setFirstDigit(`${firstDigit}` + `${int}`)\n      }\n    else {\n      setSecondDigit(`${secondDigit}` + `${int}`)\n      setStep(3)}\n  }\n\n  const selectOperator = (sign) => {\n    setOperation(sign);\n    setStep(2);\n  }\n\n  \n  const Digits = (props) => {\n    return(\n      <button className=\"digits\" onClick={()=>{selectDigit(props.digit)}}>{props.digit}</button>\n    )\n  }\n\n  const Operators = (props) => {\n    return(\n      <button className=\"operatorButton\" onClick={()=>{selectOperator(props.sign)}}>{props.sign}</button>\n    )  \n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Kamen's Calculator</h1>\n      {step >= 3 ? (<h2>{secondDigit}</h2>) :\n      (<h2>{firstDigit}</h2>)}\n      <div className=\"clear\"><button className=\"clearButton\" onClick={() => reset()}>Clear</button></div>\n      <div className=\"numberButtons\">\n        <Digits digit={1}/>\n        <Digits digit={2}/>\n        <Digits digit={3}/>\n        <Digits digit={4}/>\n        <Digits digit={5}/>\n        <Digits digit={6}/>\n        <Digits digit={7}/>\n        <Digits digit={8}/>\n        <Digits digit={9}/>\n        <Digits digit={0}/>\n        <Digits digit={`.`}/>\n\n      </div>\n      <div className=\"operatorButtonsArray\">\n        <Operators sign=\"+\"/>\n        <Operators sign=\"-\"/>\n        <Operators sign=\"*\"/>\n        <Operators sign=\"/\"/>\n        <button className=\"operatorButton\" onClick={()=>calculate()}>=</button>\n      </div>\n\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}